<?xml version="1.0"?>

<!--
 ********************************************************************
 * Builds selected parts of jdnc-incubator
 * (crimped version of my multi-module build)
 *
 * @author Richard Osbaldeston
 ********************************************************************
-->

<project name="swingx-incubator" default="jar"
         xmlns:ivy="antlib:org.apache.ivy.ant">

    <echo message="Building ${ant.project.name} (${ant.file})"/>
    <echo message="Using ${java.runtime.name}, ${java.runtime.version}"/>
    <echo message="${ant.version}"/>

    <dirname property="project.basedir" file="${basedir}../../"/>
    <property name="project.name" value="${ant.project.name}"/>
    <property name="project.lib.dir" value="${project.basedir}/lib"/>
    <property name="project.build.dir" value="${project.basedir}/build/osbald"/>
    <property name="test.logs.dir" location="${project.build.dir}/test-logs"/>
    <property name="test.report.dir" location="${project.build.dir}/test-report"/>

    <target name="init" depends="init.properties, init.taskdefs"
            description="Configure build properties, paths and other initialisation duties">
        <!--
        <ivy:settings id="ivy.instance" override="true"
            file="${project.basedir}/ivysettings.xml"/>
        -->
    </target>

    <target name="init.properties">
        <property file="build.properties"/>

        <!-- don't have the normal modules/ and subant structure here so I'll just hack these -->
        <property name="module.name" value="${ant.project.name}"/>
        <property name="module.build.dir" value="${project.build.dir}/${module.name}"/>
        <property name="module.dir" value="${module.build.dir}"/>
        <property name="module.src.dir" value="${module.dir}/src"/>
        <property name="module.test.dir" value="${module.dir}/test"/>
        <property name="module.lib.dir" value="${basedir}/lib"/>
        <property name="module.dist.dir" value="${project.basedir}/dist"/>

        <!-- set if module doesn't have any unit tests-->
        <available property="module.test" file="${module.test.dir}"/>

        <!-- sets the standard DSTAMP, TSTAMP, TODAY and ISODATE properties according to the default formats -->
        <tstamp>
            <format property="ISODATE" timezone="UTC" pattern="yyyy-MM-dd'T'hh:mm:ss"/>
        </tstamp>

        <path id="project.build.classpath">
            <fileset dir="${project.lib.dir}/share">
                <include name="swingx-head.jar"/>
                <include name="swingx-beaninfo-head.jar"/>
                <include name="swing-worker.jar"/>
                <include name="swing-layout-1.0.jar"/>
                <include name="beansbinding.jar"/>
                <include name="TimingFramework.jar"/>
                <include name="junit-4*.jar"/>
            </fileset>
            <!--
            <fileset dir="${project.lib.dir}">
                <include name="osbald/**/*.jar"/>
            </fileset>
            -->
        </path>
        <echo message="shared project classpath: ${toString:project.build.classpath}"/>
    </target>

    <target name="init.taskdefs" unless="taskdefs.loaded">
        <!--
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant"
                 classpathref="project.build.classpath"/>
        <taskdef resource="net/sf/antcontrib/antlib.xml"
                 classpathref="project.build.classpath"/>
        <echo message="external ant tasks loaded."/>
        -->
    </target>

    <target name="clean" unless="noclean">
        <delete dir="${module.build.dir}"/>
    </target>

    <target name="jar" depends="compile, jar.init, manifest"
            description="Build jar files">
        <mkdir dir="${module.dist.dir}"/>
        <jar destfile="${module.dist.dir}/${module.name}.jar">
            <fileset dir="${module.build.dir}/classes" excludes="**/*.jar, **/TestFrame*.class"/>
            <manifest>
                <attribute name="Main-Class" value="${manifest.main}"/>
                <attribute name="Class-Path" value="${manifest.classpath}"/>                
                <attribute name="Specification-Title" value="${project.name}"/>
                <attribute name="Specification-Vendor" value="${project.vendor}"/>
                <attribute name="Specification-Version" value="${project.version}"/>
                <attribute name="Implementation-Title" value="${project.name}"/>
                <attribute name="Implementation-Vendor" value="${project.vendor}"/>
                <attribute name="Implementation-Version" value="${module.revision}"/>
                <attribute name="Copyright" value="${project.copyright}"/>
                <section name="Build">
                    <attribute name="Module" value="${module.name}"/>
                    <attribute name="Build-User" value="${user.name}"/>
                    <attribute name="Build-Date" value="${TODAY}"/>
                    <attribute name="Build-TimeStamp" value="${DSTAMP}${TSTAMP}"/>
                </section>
            </manifest>
        </jar>
    </target>

    <target name="jar.init">
        <!-- copies any non-java resources for inclusion into resulting jar -->
        <copy todir="${module.build.dir}/classes">
            <fileset dir="${module.src.dir}" excludes="**/*.java, **/*.form"/>
        </copy>
    </target>

    <target name="compile" depends="init, clean, compile.init, module.classpath, compile.javac"
            description="Compile the module(s) source">
    </target>

    <target name="compile.init" depends="compile.info">
        <delete dir="${module.src.dir}" quiet="true"/>

        <!-- listed in increasing importance (overwrite=true) -->

        <copy todir="${module.src.dir}" overwrite="true" preservelastmodified="true" verbose="true"
              description="copy selected source from incubator contributors">

            <fileset dir="${project.basedir}/src/petw2815/java"/>
            <fileset dir="${project.basedir}/src/petw2815/beaninfo"/>   <!-- really need beaninfo at runtime? -->

            <!--
            <fileset dir="${project.basedir}/src/rasto1968/JXCheckList/src"
                     excludes="**/*Example.java"/>
            -->

            <fileset dir="${project.basedir}/src/mattnathan/Core/java"/>
            <fileset dir="${project.basedir}/src/mattnathan/JXComponent/java"/>
            <fileset dir="${project.basedir}/src/mattnathan/JXClock/java"/>
            <fileset dir="${project.basedir}/src/mattnathan/JXEffectPanel/java"/>
            <fileset dir="${project.basedir}/src/mattnathan/JXTitledSeparator/java"/>
            <fileset dir="${project.basedir}/src/mattnathan/ScalableIcons/java"/>
            <fileset dir="${project.basedir}/src/mattnathan/ScalePolicy/java"/>
            <fileset dir="${project.basedir}/src/mattnathan/Painters/java"
                     excludes="**/LensFlare*.java, **/FlarePainter.java"
                     description="Beware of the 6.0 stuff in here!"/>

            <!--
            <fileset dir="${jdnc-incubator.src.dir}/rah003/JXMenuBar/java"
                     excludes="**/*Test*.java, **/*Demo*.java, **/*Busy*.java"/>
            -->

            <!--
            <fileset dir="${project.basedir}/src/kschaefe"
                     includes="split-button/java/**, jxcombobox/java/**, menu/java/**"
                     description="Beware of the 6.0 stuff in here!"/>
            -->

            <fileset dir="${project.basedir}/src/kleopatra/java"
                     includes="META-INF/**, org/jdesktop/swingbinding/**"
                     excludes="**/*Test*.java, **/*Demo*.java"/>
            <fileset dir="${project.basedir}/src/kleopatra/foreign"
                     includes="rasto1968/checklist/**"
                     excludes="**/CheckableExperiments.java"/>
        </copy>

        <copy todir="${module.src.dir}" overwrite="true" preservelastmodified="true" verbose="true"
              description="copy selected sources from own incubator and borrowed contributions">
            <!--
            <fileset dir="borrowed/mario_cesar/VerticalTabbedPane/java"/>
            <fileset dir="borrowed/santhosh/VerticalTabbedPane/java"/>
            -->
            <fileset dir="borrowed/softAMIS/DelayedInvoker/java"/>
            <fileset dir="borrowed/thierry/HTMLReportBuilder/java"/>
            <fileset dir="borrowed/scottviolet/AppFramework/java"/>
            <fileset dir="borrowed/jasperpotts/RangeListSelectionModel/java"/>
            <fileset dir="borrowed/testing/java"/>
            <!-- if mattnathan JSE 5.0 safe filtered copies above fails - will be needing this
            <fileset dir="borrowed/mattnathan/JXComponent/java"/>
            -->

            <fileset dir="incubator/JXInformationPane/java"/>
            <fileset dir="incubator/Common/java"/>
            <fileset dir="swingx-patches/java"/>
            <fileset dir="swingx-patches/resources"/>
        </copy>
    </target>

    <target name="compile.info">
        <echo message="-------------------------------"/>
        <echo message="Building Module: ${module.name}"/>
        <echo message="-------------------------------"/>
    </target>

    <target name="compile.javac" depends="compile.init, module.classpath">
        <mkdir dir="${module.build.dir}/classes"/>
        <javac destdir="${module.build.dir}/classes"
               debug="${compile.debug}"
               source="${compile.source}"
               target="${compile.target}">
            <src path="${module.src.dir}"/>
            <classpath>
                <path refid="module.classpath"/>
                <path refid="project.build.classpath"/>
            </classpath>
        </javac>
    </target>

    <target name="module.classpath">
        <!-- TODO tighten this up with versioned releases from maven (beansbindings?) -->
        <path id="module.classpath">
            <fileset dir="${module.build.dir}">
                <include name="lib/**/*.jar"/>
            </fileset>
        </path>

        <pathconvert pathsep="," property="module-path" refid="module.classpath">
            <map from="${project.basedir}/" to=""/>
        </pathconvert>
        <echo>Module Classpath: ${module-path}</echo>
    </target>

    <!--
    <target name="resolve"
            description=" - resolve and retrieve dependencies with ivy">
        <mkdir dir="${module.build.dir}/lib"/>
        <ivy:retrieve conf="module" sync="true"
                pattern="${module.build.dir}/lib/module/[artifact].[ext]"/>
        <ivy:retrieve conf="runtime"
                pattern="${module.build.dir}/lib/runtime/[artifact](-[revision]).[ext]"/>
    </target>

    <target name="publish" depends="jar"
            description=" - publish jar into the ivy repository">
        <ivy:publish artifactspattern="${module.dist.dir}/[artifact].[ext]"
                     deliverivypattern="${module.dist.dir}/[module](-[revision])-ivy.[ext]"
                     resolver="repository"
                     pubrevision="${module.revision}"
                     status="integration"
                     overwrite="true"
        />
    </target>
    -->

    <!-- define manifest attributes, these are blank by default expecting modules to override its sub-targets -->

    <target name="manifest" depends="jar.init, manifest.path, manifest.classpath, manifest.main, debug.manifest">
    </target>

    <target name="manifest.path">
        <path id="manifest.path">
        </path>
    </target>

    <target name="manifest.classpath" depends="manifest.path">
        <pathconvert dirsep="/" pathsep=" " refid="manifest.path" property="manifest.classpath">
            <map from="${module.build.dir}/lib/master/" to=""/>
            <map from="${module.build.dir}/lib/module/" to=""/>
            <map from="${module.build.dir}/lib/runtime" to="lib"/>
        </pathconvert>
    </target>

    <target name="manifest.main">
        <property name="manifest.main" value=""/>
    </target>

    <!-- debugging and state targets -->

    <target name="built.condition">
        <available file="${project.build.dir}/modules" property="modules.built"/>
    </target>

    <target name="built.check" unless="modules.built">
        <fail message="Modules not built! Please run 'ant build-all' first."/>
    </target>

    <target name="javadoc" depends="compile"
            description="Generate API documentation">
        <!-- TODO -->
    </target>

    <target name="debug.paths">
        <echoproperties prefix="project"/>
        <echoproperties prefix="module"/>
        <echoproperties prefix="test"/>
    </target>

    <target name="debug.manifest">
        <pathconvert pathsep="," property="manifest.property" refid="manifest.path">
            <map from="${project.basedir}/" to=""/>
        </pathconvert>
        <echo>Manifest Classpath: ${manifest.property}</echo>
    </target>

    <!--
    <target name="debug.info">
        <ivy:info file="${module.dir}/ivy.xml"/>
    </target>

    <target name="debug.report" depends="resolve">
        <ivy:report todir="${module.build.dir}/ivy-report"/>
    </target>
    -->

    <!-- Common testing targets ****************************** -->

    <target name="test" depends="init, test.compile, test.run" if="module.test">
    </target>

    <target name="test.init" depends="init.properties">
        <property name="module.test.classes" value="${module.build.dir}/test"/>
        <mkdir dir="${module.test.classes}"/>

        <path id="test.classpath">
            <path location="${module.test.classes}"/>
            <fileset dir="${module.build.dir}/lib">
                <include name="**/*.jar"/>
            </fileset>
            <path location="${module.test.dir}"/>
            <path refid="project.build.classpath"/>
        </path>

        <pathconvert pathsep="," property="test-classpath" refid="test.classpath">
            <map from="${project.basedir}/" to=""/>
        </pathconvert>
        <echo>Testing Classpath: ${test-classpath}</echo>        
    </target>

    <target name="test.compile" depends="test.init" if="module.test">
        <javac srcdir="${module.test.dir}"
               destdir="${module.test.classes}">
            <classpath>
                <path refid="test.classpath"/>
            </classpath>
        </javac>
    </target>

    <target name="test.run" depends="test.compile" if="module.test">
        <mkdir dir="${test.logs.dir}"/>
        <junit dir="${project.basedir}"
               fork="yes"
               forkmode="perTest"
               maxmemory="256m"
               printsummary="yes"
               tempdir="${java.io.tmpdir}"
               errorProperty="module.test.failure"
               failureproperty="module.test.failure">
            <assertions>
                <enable package="org.jdesktop"/>
            </assertions>
            <classpath>
                <path refid="test.classpath"/>
            </classpath>
            <batchtest todir="${test.logs.dir}">
                <fileset dir="${module.test.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
            <formatter type="plain" usefile="true"/>
            <formatter type="xml" usefile="true"/>
        </junit>

        <if>
            <equals arg1="${module.test.failure}" arg2="true"/>
            <then>
                <propertyfile file="${test.logs.dir}/tests.failed" comment="Test(s) Failed."/>
            </then>
        </if>
    </target>

</project>