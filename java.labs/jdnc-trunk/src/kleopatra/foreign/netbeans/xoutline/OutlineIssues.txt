
The code is based on Netbeans Outline-related classes as of changeset:
http://hg.netbeans.org/main/rev/5ca2a45fd6a1

Evolved and adapted to the needs of SwingX JXTreeTable (here re-named
to JXXTreeTable). The intention is to switch out to JXTreeTable with
a the treetable of this package. As the api roughly remains the same
that replacement should be mostly transparent to client code.

Issues with Netbeans outline package:

- mapped update table event: indices relative to parent, must be absolute
- TreePathSupport.addTreeWillExpandListeners: param is TreeExpansionListener,
  must be TreeWillExpandListener
- ocasionally: delete node in tree model (somewhere in the "middle") 
  doesn't repaint "some rows below" correctly. Happens if table's 
  fillViewportHeight is true.
- the usual problem with the hack of detecting the handle control in editCellAt
  selection must not change on handle
- EventBroadcaster: cannot cope with null root (which is allowed). Reason is translateEvent
  queries the original event with getPath instead of getTreePath
- structureChanged on subtrees must not clear expansion memory on unrelated subtrees
- any reason the order of messaging the layoutCache vs re-firing the 
  tree/mapped tableevents is different in nodesChanged/inserted/removed/structure?
- layoutCache expandedState updated twice (in treepathsupport.collapse and
  broadcaster treeCollapsed)
- broadcaster fires incorrect table insert count for expansion. Reason is 
  that in translateEvent(expansionEvent) the path is not yet expanded, so
  the number of paths queried for expanded descendants is always (?) 0.
- initial expansion state inconsistent: layout expanded == true, 
  pathSupport expanded == false. Must be true for both.
- TreePathSupport must not mark leafs as expanded
- broadcaster must cope with null treeEvent (throws NPE) - don't know where they might
  come from, but as we use custom treeModels and core tree/ui/listeners check for null
  we need to do as well
- broadcaster incorrect update of expanded paths (in treePathSupport) on nodesRemoved
   for visible nodes, removes
  parent instead of childPath, for invisible: does nothing at all. Deeper reason is 
  code murk: the remove is done in translateEvent instead of in a dedicated method
  (path cleanup should be moved to TreePathSupport anyway)
- EventBroadcaster must fire a nodeChanged on update from table model (the change
  in a column might effect the node)   
          
  
Suggestions (partly implemented in SwingX incubator JXXTreeTable)

Change of perspective on X/OutlineModel: 
- enhance the X/OutlineModel with delegates to its internal collaborators 
  (TreePathSupport, EventBroadcaster). This will hide the exact details
  from clients like the table. Plus will allow to move the details into
  the UI-delegate without changing the table itself.
- to the outside-world, the model will be completely responsible for 
  expansion control, row and event mapping. It's _the_ place to attach
  listeners, all internal event firing should have the model as source
  (as EventBroadcaster already does for Tree/TableEvents, TreePathSupport
  should for expansion events)
- rename TreePathSupport to ExpansionSupport (-Controller?)
- make contained model (in DefaultOutline) mutable. This facilitates listener cleanup, 
  without the old broadcaster is still listening to the tree-, table model. 
- move control of state related to expansion completely into TreePathSupport 
  ( that is, let it update the layoutCache as appropriate instead of doing
  so in the broadcaster)
- TreePathSupport should behave more like JTree: currently it doesn't expand the 
  parents
- fixed bidi compliance
- first steps for added editor
- use table default editors/renderers and wrap into an DefaultTreeTableRenderer. 
  This should be done in the ui - but would require to c&p all painting code
  just to change paintCell. 
- editor issue: textfield doesn't get focus (usual compound component prob?)
- editor issue: need border around textfield, not cell
- pack doesn work, check where the wrapping renderer gets wrong ..: some problem
  in BoxLayout which is used in the outline panel - can't cope with descendants
  which aren't validating (like the rendering optimized JRendererLabel), similar
  to its probs with invisible comps? Fixed: needed to manually invalidate
  after setting the new delegate comp.
- fixed incorrect expansion cleanup after nodesRemoved 
- done: largeModel/rowHeight property 
- TODO: understand componentListener, nodeDimension 
- added support for scrollsOnExpand, expandSelectedPaths to ui
- documented: make treeSelectionModel safe, the coupled listSelection must not be swept out
  from under its feet
- todo: implement showRootHandles


Notes on replacing JXTreeTable with JXXTreeTable

- successively replaced all references to the renderer by those to the 
  XOutlineModel
- added api to XOutlineModel as needed
- removed all "hacking" code
- added BasicTreeTableUI (doesn't do too much right now - just crude hit 
  detection of expansion handles)
- added TreeTableAddon
- added dedicated "TreeTableRenderer" for hierarchical column plus 
  TreeTableCellContext. TODO: hide the renderer as implementation detail
  of the treeTable and use a construct (like the DelegatingRenderer in
  JXTree, JXTree) which wraps around user provided table renderers.
- c&p'ed all JXTreeTable related tests (surprisingly many are passing 
  or look okay :-)
- started formal test on XOutlineModel (for defining the contracts)
- same problems with different notions of structureChange in tree vs. in table ;-)
  added method into broadcaster to decide. TODO: enhance with formally pluggable
  mapper
- handleHitDetection: added support for hierarchical anywhere (not just column 0)
  and bidi
- fixed renderer: not bidi aware
- done: editor support
- TODO selection state management cleanup
- TODO implement treelines and line-styles
- TODO implement getPathBounds, double-click (on content only?) expands/collapses
- 
  



Notes on SwingX 

- TreeTableModel should have method getTreeModelListeners (super doesn't
  which was my expectation)
- DefaultTreeTableModel should have methods to change/remove multiple nodes
- DefaultTreeTableModel should have method getTreePathToRoot
- implement a convenience TreeTableModel: wrap a treeModel and a RowModel, the
  latter defining the columnar representation only, not the tree-ish structure
  as the TreeTableNode does 
- HighlightPredicate.IS_HIERARCHICAL 
- test infrastructure: add methods with menu option and wrapWithScrolling
- context in ComponentProvider: should use generified param (CellContext<?> should do)
 
 
   