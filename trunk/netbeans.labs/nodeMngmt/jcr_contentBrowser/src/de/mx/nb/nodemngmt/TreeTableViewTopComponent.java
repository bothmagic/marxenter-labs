/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.mx.nb.nodemngmt;

import java.awt.BorderLayout;
import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.view.TreeTableView;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Children;
import org.openide.nodes.Node;
import org.openide.nodes.Node.Property;
import org.openide.nodes.PropertySupport;
import org.openide.util.Lookup;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//de.mx.nb.nodemngmt//TreeTableView//EN",
autostore = false)
@TopComponent.Description(preferredID = "TreeTableViewTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = true)
@ActionID(category = "Window", id = "de.mx.nb.nodemngmt.TreeTableViewTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_TreeTableViewAction",
preferredID = "TreeTableViewTopComponent")
public final class TreeTableViewTopComponent extends TopComponent  implements ExplorerManager.Provider {
    
    
    public TreeTableViewTopComponent() {
        initComponents();
        
        setLayout(new BorderLayout());
        
        TreeTableView ttview = new TreeTableView();
        //ttview.setDefaultActionAllowed(false);
        
        ttview.setProperties(new Node.Property[]{
            new PropertySupport.ReadOnly<String>("descr", String.class, 
                    NbBundle.getMessage(TreeTableViewTopComponent.class, "NODE_Description"), 
                    NbBundle.getMessage(TreeTableViewTopComponent.class, "NODE_Description")) {

            @Override
            public String getValue() throws IllegalAccessException, InvocationTargetException {
                return "test";
            }}, 
            new PropertySupport.ReadOnly<Date>("date", Date.class, "Datum", "Datum") {

            @Override
            public Date getValue() throws IllegalAccessException, InvocationTargetException {
                return new Date();
            }}, 
            new PropertySupport.ReadOnly<Integer>("state", Integer.class, "Status", "Status") {

            @Override
            public Integer getValue() throws IllegalAccessException, InvocationTargetException {
                return 0;
            }}
        
        });
        
        add(ttview, java.awt.BorderLayout.CENTER);
        setName(NbBundle.getMessage(TreeTableViewTopComponent.class, "CTL_TreeTableViewTopComponent"));
        setToolTipText(NbBundle.getMessage(TreeTableViewTopComponent.class, "HINT_TreeTableViewTopComponent"));
        putClientProperty(TopComponent.PROP_CLOSING_DISABLED, Boolean.TRUE);
        //putClientProperty(TopComponent.PROP_DRAGGING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_UNDOCKING_DISABLED, Boolean.TRUE);
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return ListViewTopComponent.em;
    }
    
    
}
