/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.mmx.etester.RetrieveData.wizardpage;

import de.mmx.etester.RetrieveData.etrest.CommandFactory;
import de.mmx.etester.RetrieveData.restdata.Requirement;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.ciscavate.cjwizard.WizardPage;
import org.ciscavate.cjwizard.WizardSettings;

/**
 *
 * @author marxma
 */
public class PropertyPage extends WizardPage {

    /**
     * Creates new form PropertyPage
     */
    public PropertyPage() {
        super("Attribute wählen.", "Attribute wählen.");
        initComponents();
    }

    @Override
    public void rendering(List<WizardPage> path, WizardSettings settings) {
        super.rendering(path, settings);
        List<Requirement> reqs = (List<Requirement>) settings.get("requirements");
        setNextEnabled(false);
        if (!reqs.isEmpty()) {
            Map<String, Object> map = CommandFactory.INSTANCE.getRequirement(reqs.get(0).getId());
            List<String> keys = new ArrayList<String>(map.keySet());
            Collections.sort(keys);
            liProperty.setListData(keys.toArray());
            
        }
        
        liProperty.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
                setNextEnabled(liProperty.getSelectedIndices().length >0);
            }
        });
    }

    @Override
    public void updateSettings(WizardSettings settings) {
        super.updateSettings(settings);
        settings.put("properties", Arrays.asList(liProperty.getSelectedValues()));
        
    }
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        liProperty = new javax.swing.JList();

        liProperty.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(liProperty);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList liProperty;
    // End of variables declaration//GEN-END:variables
}
