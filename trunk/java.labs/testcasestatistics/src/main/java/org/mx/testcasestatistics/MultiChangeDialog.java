/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.mx.testcasestatistics;

import java.io.*;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.PriorityQueue;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.jdesktop.swingx.treetable.DefaultMutableTreeTableNode;
import org.jdesktop.swingx.treetable.DefaultTreeTableModel;

/**
 *
 * @author marxma
 */
public class MultiChangeDialog extends javax.swing.JDialog {

    /**
     * Creates new form MultiChangeDialog
     */
    public MultiChangeDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setCheckstate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tfTester = new javax.swing.JTextField();
        cbTester = new javax.swing.JCheckBox();
        tfDAtum = new javax.swing.JTextField();
        cbDatum = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        cbDauer = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tfBuild = new javax.swing.JTextField();
        tfDauer = new javax.swing.JTextField();
        cbBuild = new javax.swing.JCheckBox();
        cbUmbebung = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tfTestDaten = new javax.swing.JTextField();
        tfUmgebung = new javax.swing.JTextField();
        cbTestdaten = new javax.swing.JCheckBox();
        cbKonfig = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        tfKommentar = new javax.swing.JTextField();
        tfKonfig = new javax.swing.JTextField();
        cbKommentar = new javax.swing.JCheckBox();
        cbDeleteRecords = new javax.swing.JCheckBox();
        cbLockCR = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Ok");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Tester");

        cbTester.setToolTipText("Activate to Edit");
        cbTester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTesterActionPerformed(evt);
            }
        });

        cbDatum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDatumActionPerformed(evt);
            }
        });

        jLabel2.setText("Datum (dd.mm.yyyy)");

        cbDauer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDauerActionPerformed(evt);
            }
        });

        jLabel9.setText("Dauer");

        jLabel10.setText("Build");

        cbBuild.setToolTipText("Activate to Edit");
        cbBuild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBuildActionPerformed(evt);
            }
        });

        cbUmbebung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUmbebungActionPerformed(evt);
            }
        });

        jLabel11.setText("Umgebung");

        jLabel12.setText("Test Daten");

        cbTestdaten.setToolTipText("Activate to Edit");
        cbTestdaten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTestdatenActionPerformed(evt);
            }
        });

        cbKonfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbKonfigActionPerformed(evt);
            }
        });

        jLabel13.setText("Konfig");

        jLabel14.setText("Kommentar");

        cbKommentar.setToolTipText("Activate to Edit");
        cbKommentar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbKommentarActionPerformed(evt);
            }
        });

        cbDeleteRecords.setText("LÃ¶sche Testverlauf");

        cbLockCR.setText("CR und Kommentar behalten");
        cbLockCR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLockCRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbTester)
                                    .addComponent(cbBuild)
                                    .addComponent(cbTestdaten)
                                    .addComponent(cbKommentar))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(tfTester, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10)
                                    .addComponent(tfBuild, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel12)
                                        .addComponent(tfTestDaten, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel14)
                                        .addComponent(tfKommentar, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(cbDeleteRecords))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbLockCR)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbDatum, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cbDauer, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cbUmbebung, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cbKonfig, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(tfDAtum, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel9)
                                        .addComponent(tfDauer, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel11)
                                        .addComponent(tfUmgebung, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel13)
                                        .addComponent(tfKonfig, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(4, 4, 4)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbDatum, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfDAtum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfTester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbTester)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbDauer, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfDauer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfBuild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbBuild)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbUmbebung, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfUmgebung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfTestDaten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbTestdaten)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbKonfig, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfKonfig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfKommentar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbKommentar)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbDeleteRecords)
                    .addComponent(cbLockCR))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbTesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTesterActionPerformed
        tfTester.setEnabled(cbTester.isSelected());
    }//GEN-LAST:event_cbTesterActionPerformed

    private void cbDatumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDatumActionPerformed
        tfDAtum.setEnabled(cbDatum.isSelected());
    }//GEN-LAST:event_cbDatumActionPerformed

    private void cbDauerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDauerActionPerformed
        tfDauer.setEnabled(cbDauer.isSelected());
    }//GEN-LAST:event_cbDauerActionPerformed

    private void cbBuildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBuildActionPerformed
        tfBuild.setEnabled(cbBuild.isSelected());
    }//GEN-LAST:event_cbBuildActionPerformed

    private void cbUmbebungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUmbebungActionPerformed
        tfUmgebung.setEnabled(cbUmbebung.isSelected());
    }//GEN-LAST:event_cbUmbebungActionPerformed

    private void cbTestdatenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTestdatenActionPerformed
        tfTestDaten.setEnabled(cbTestdaten.isSelected());
    }//GEN-LAST:event_cbTestdatenActionPerformed

    private void cbKonfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbKonfigActionPerformed
        tfKonfig.setEnabled(cbKonfig.isSelected());
    }//GEN-LAST:event_cbKonfigActionPerformed

    private void cbKommentarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbKommentarActionPerformed
        tfKommentar.setEnabled(cbKommentar.isSelected());
    }//GEN-LAST:event_cbKommentarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        complete();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cbLockCRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLockCRActionPerformed
        
    }//GEN-LAST:event_cbLockCRActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MultiChangeDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MultiChangeDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MultiChangeDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MultiChangeDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                MultiChangeDialog dialog = new MultiChangeDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private void setCheckstate() {
        tfTester.setEnabled(cbTester.isSelected());
        tfDAtum.setEnabled(cbDatum.isSelected());
        tfDauer.setEnabled(cbDauer.isSelected());
        tfBuild.setEnabled(cbBuild.isSelected());
        tfUmgebung.setEnabled(cbUmbebung.isSelected());
        tfTestDaten.setEnabled(cbTestdaten.isSelected());
        tfKonfig.setEnabled(cbKonfig.isSelected());
        tfKommentar.setEnabled(cbKommentar.isSelected());


    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbBuild;
    private javax.swing.JCheckBox cbDatum;
    private javax.swing.JCheckBox cbDauer;
    private javax.swing.JCheckBox cbDeleteRecords;
    private javax.swing.JCheckBox cbKommentar;
    private javax.swing.JCheckBox cbKonfig;
    private javax.swing.JCheckBox cbLockCR;
    private javax.swing.JCheckBox cbTestdaten;
    private javax.swing.JCheckBox cbTester;
    private javax.swing.JCheckBox cbUmbebung;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField tfBuild;
    private javax.swing.JTextField tfDAtum;
    private javax.swing.JTextField tfDauer;
    private javax.swing.JTextField tfKommentar;
    private javax.swing.JTextField tfKonfig;
    private javax.swing.JTextField tfTestDaten;
    private javax.swing.JTextField tfTester;
    private javax.swing.JTextField tfUmgebung;
    // End of variables declaration//GEN-END:variables

    private void complete() {

        File file = null;



        PriorityQueue queue = new PriorityQueue();
        queue.add(new File("."));

        while (!queue.isEmpty()) {

            file = (File) queue.poll();

            queue.addAll(Arrays.asList(file.listFiles(new FileFilter() {

                public boolean accept(File pathname) {

                    return pathname.isDirectory();

                }
            })));
            for (File xlsFile : file.listFiles(new FilenameFilter() {

                public boolean accept(File dir, String name) {
                    return name.toLowerCase().startsWith("testcase") && name.contains(".xls");
                }
            })) {

                System.out.println("process " + xlsFile.getName());
                try {

                    Workbook w = new HSSFWorkbook(new FileInputStream(xlsFile));



                    for (int i = 1; i < w.getNumberOfSheets(); i++) {
                        try {

                            Sheet sh = w.getSheetAt(i);

                            Row r10 = sh.getRow(9);
                            if (cbTester.isSelected()) {
                                r10.getCell(2).setCellValue(tfTester.getText());
                            }
                            if (cbDatum.isSelected()) {
                                try {
                                    r10.getCell(6).setCellValue(NewMainFrame.dateFormat.parse(tfDAtum.getText()));
                                } catch (Exception e) {
                                    r10.getCell(6).setCellValue(tfDAtum.getText());
                                }

                            }
                            Row r11 = sh.getRow(10);
                            if (cbBuild.isSelected()) {
                                r11.getCell(2).setCellValue(tfBuild.getText());
                            }
                            if (cbDauer.isSelected()) {
                                try {
                                    r11.getCell(6).setCellValue(NumberFormat.getInstance().parse(tfDauer.getText()).floatValue());
                                } catch (Exception e) {
                                    r11.getCell(6).setCellValue(tfDauer.getText());
                                }
                            }
                            Row r12 = sh.getRow(11);
                            if (cbTestdaten.isSelected()) {
                                r12.getCell(2).setCellValue(tfTestDaten.getText());
                            }
                            if (cbUmbebung.isSelected()) {
                                r12.getCell(6).setCellValue(tfUmgebung.getText());
                            }

                            Row r13 = sh.getRow(12);

                            if (cbKommentar.isSelected()) {
                                r13.getCell(2).setCellValue(tfKommentar.getText());
                            }
                            if (cbKonfig.isSelected()) {
                                r13.getCell(6).setCellValue(tfKonfig.getText());
                            }

                            Row r = sh.getRow(16);

                            if (cbDeleteRecords.isSelected()) {
                                try {
                                    while (r.getCell(0).getNumericCellValue() > 0) {
                                        
                                        r.getCell(3).setCellValue("");
                                        r.getCell(4).setCellValue("");
                                        r.getCell(5).setCellValue("");
                                        
                                        if (!cbLockCR.isSelected()) {
                                            r.getCell(6).setCellValue("");
                                            r.getCell(7).setCellValue("");
                                        }
                                        
                                        r = sh.getRow(r.getRowNum()+1);
                                    }
                                } catch (Exception e) {
                                    break;
                                }

                            }

                        } catch (IllegalStateException ex) {
                        }

                    }
                    HSSFFormulaEvaluator.evaluateAllFormulaCells(w);
                    w.write(new FileOutputStream(xlsFile));
                   

                } catch (Exception ex) {
                    Logger.getLogger(App.class.getName()).log(Level.SEVERE, "could not load " + xlsFile.getName(), ex);
                }

                
            }
        }

        setVisible(false);
    }
}
